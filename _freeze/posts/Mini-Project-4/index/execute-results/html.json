{
  "hash": "5bd685b1d116cefc3f9f8c46ecc5b7d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mini-Project-4\"\ndate: \"04-02-2025\"\nauthor: \"Clayton Fogler\"\n---\n\n\n\n\n# Mini Project 4: Bayesian Analysis\n\n##### \" I have followed all rules for collaboration for this project, and I have not used generative AI on this project. \\~ Clayton Fogler \"\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n\n### Rafael Nadal is arguably the greatest men’s clay-court tennis player ever to play the game. In this mini-project, I analyze the probability that Nadal wins a point on his own serve against his primary rival, Novak Djokovic, at the French Open (the most prestigious clay court tournament in the world). We will start by identifying and calculating 3 different priors.\n\n## Priors:\n\n#### 1) Non-informative Prior\n\n-   Since we have no knowledge about Nadal's playing skill, or even Djokovic, we will assume that there is a 50/50 chance that Nadal will win a point on his own serve against his rival Djokovic. Our non informative alpha and beta will both be equal to 1.\n\n#### 2) Informative Prior based on clay-court match the two played in the previous year (Nadal won 46 out of 66 points on his serve. The standard error of this estimate is 0.05657)\n\n-   Since we know he won 46 our of 66 points, we find that his probability of winning, or as we called it target mean, is 44/66. We also know our target variance is 0.05657\\^2 since our standard error is 0.05657. We use the following code to calculate the best alpha and beta that give us our target mean and target variance.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget_mean <- 44/66\nalphas <- seq(0.1, 55, length.out = 500)\nbetas <- ((22/66)*alphas) / (44/66)\nparam_df <- tibble(alphas, betas)\nparam_df <- param_df |> mutate(vars = (alphas*betas) / ((alphas+betas)^2 * (alphas +betas+1)))\n\ntarget_var <- 0.05657^2\nparam_df <- param_df |> mutate(dist_to_target = abs(vars - target_var))\nparam_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 500 × 4\n   alphas betas   vars dist_to_target\n    <dbl> <dbl>  <dbl>          <dbl>\n 1  0.1   0.05  0.193          0.190 \n 2  0.210 0.105 0.169          0.166 \n 3  0.320 0.160 0.150          0.147 \n 4  0.430 0.215 0.135          0.132 \n 5  0.540 0.270 0.123          0.120 \n 6  0.650 0.325 0.113          0.109 \n 7  0.760 0.380 0.104          0.101 \n 8  0.870 0.435 0.0964         0.0932\n 9  0.980 0.490 0.0900         0.0868\n10  1.09  0.545 0.0843         0.0811\n# ℹ 490 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nparam_df |> filter(dist_to_target == min(dist_to_target))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  alphas betas    vars dist_to_target\n   <dbl> <dbl>   <dbl>          <dbl>\n1   45.6  22.8 0.00320     0.00000145\n```\n\n\n:::\n:::\n\n\n\n\n#### 3) Informative Prior based on a sports announcers claim that they think Nadal wins about 75% of the points on his serve against Djokovic. They are also \"almost sure\" that Nadal wins no less than 70% of his points on serve against Djokovic.\n\n-   Just like the previous prior, we will use the wins as our target mean, which is 0.75. Since we are almost sure that Nadal wins no less than 70% of his points against Djokovic, we will set our target probability to 0.02. We will use the following code to calculate the best combination of alpha and beta that give us our target mean and probability.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget_mean <- 0.75\nalphas <- seq(0.1, 400,length.out = 500)\nbetas <- (0.25*alphas) / 0.75\nparam_df <- tibble(alphas, betas)\nparam_df <- param_df |> mutate(vars = (alphas*betas) / ((alphas+betas)^2 * (alphas +betas+1)))\n\ntarget_prob <- 0.02\nprob_less_70 <- pbeta(.70, alphas, betas)\n\ntibble(alphas, betas, prob_less_70) |>\n  mutate(close_to_target = abs(prob_less_70 - target_prob)) |>\n  filter(close_to_target == min(close_to_target))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  alphas betas prob_less_70 close_to_target\n   <dbl> <dbl>        <dbl>           <dbl>\n1   252.  83.9       0.0200       0.0000117\n```\n\n\n:::\n:::\n\n\n\n\n#### Graph with all three of our priors:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nps <- seq(0, 1, length.out = 1000)\n\nnon_informative_alpha <- 1\nnon_informative_beta <-1\n\ninformative_alpha_1 <- 45.6483\ninformative_beta_1 <-22.82415\n\ninformative_alpha_2 <- 251.7405\ninformative_beta_2 <- 83.91349\n\nnon_informative_prior <- dbeta(ps, non_informative_alpha, non_informative_beta)\n\ninformative_prior_1 <- dbeta(ps, informative_alpha_1,informative_beta_1)\n\ninformative_prior_2 <- dbeta(ps, informative_alpha_2,informative_beta_2)\n\nprior_plot <- tibble(ps, non_informative_prior, informative_prior_1, informative_prior_2 ) |>\n  pivot_longer(2:4, names_to = \"prior_type\", values_to = \"density\")\n\nggplot(data = prior_plot, aes(x = ps, y = density, colour = prior_type)) +\n  geom_line() +\n  scale_colour_viridis_d(end = 0.9) +\n  theme_minimal() +\n  labs(x = \"p\", title = \"Graph of the Three Priors\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n-   Above, we have graphed all three of our priors.\n\n## Data from the 2020 French Open:\n\n-   Now that we have our priors, we can now take the data from the 2020 French Open to update our prior for the probability that Nadal wins a point on his own serve against his primary rival, Novak Djokovic, at the French Open. At the 2020 French Open, when Nadal and Djokovic played in the final, Nadal won 56 points of out 84 served points.\n\n#### Updating our non informative prior\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_informative_alpha <- 1\nnon_informative_beta <-1\n\n# for alpha posterior, we just add the successes (56) to our prior alpha\n# for beta posterior, we we take the number of trials (84), subtract the successes (56) and then add our prior beta\n\nnon_informative_post_alpha <- 56 + non_informative_alpha\nnon_informative_post_beta <- 84 - 56 + non_informative_beta\n\nnon_informative_post_alpha\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 57\n```\n\n\n:::\n\n```{.r .cell-code}\nnon_informative_post_beta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 29\n```\n\n\n:::\n:::\n\n\n\n\n-   As you can see, our post alpha is 57 and our post beta is 29 for our non informative prior\n\n#### Updating our informed prior 1 (based on clay-court match the two played in the previous year)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninformative_alpha_1 <- 45.6483\ninformative_beta_1 <-22.82415\n\n# for alpha posterior, we just add the successes (56) to our prior alpha\n# for beta posterior, we we take the number of trials (84), subtract the successes (56) and then add our prior beta\n\ninformative_post_alpha_1 <- 56 + informative_alpha_1\ninformative_post_beta_1 <- 84 - 56 + informative_beta_1\n\ninformative_post_alpha_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101.6483\n```\n\n\n:::\n\n```{.r .cell-code}\ninformative_post_beta_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50.82415\n```\n\n\n:::\n:::\n\n\n\n\n-   As you can see, our post alpha is 101.6483 and our post beta is 50.82415 for our informed prior 1 (based on clay-court match the two played in the previous year).\n\n#### Updating our informed prior 2 (based on a sports announcers claim)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninformative_alpha_2 <- 251.7405\ninformative_beta_2 <- 83.91349\n\n# for alpha posterior, we just add the successes (56) to our prior alpha\n# for beta posterior, we we take the number of trials (84), subtract the successes (56) and then add our prior beta\n\ninformative_post_alpha_2 <- 56 + informative_alpha_2\ninformative_post_beta_2 <- 84 - 56 + informative_beta_2\n\ninformative_post_alpha_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 307.7405\n```\n\n\n:::\n\n```{.r .cell-code}\ninformative_post_beta_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 111.9135\n```\n\n\n:::\n:::\n\n\n\n\n-   As you can see, our post alpha is 307.7405 and our post beta is 111.9135 for our informed prior 2 (based on a sports announcers claim).\n\n#### Graph with all three of our posteriors:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nps <- seq(0, 1, length.out = 1000)\n\nnon_informative_post <- dbeta(ps, non_informative_post_alpha, non_informative_post_beta)\n\ninformative_post_1 <- dbeta(ps, informative_post_alpha_1,informative_post_beta_1)\n\ninformative_post_2 <- dbeta(ps, informative_post_alpha_2,informative_post_beta_2)\n\npost_plot <- tibble(ps, non_informative_post, informative_post_1, informative_post_2 ) |>\n  pivot_longer(2:4, names_to = \"post_type\", values_to = \"density\")\n\nggplot(data = post_plot, aes(x = ps, y = density, colour = post_type)) +\n  geom_line() +\n  scale_colour_viridis_d(end = 0.9) +\n  theme_minimal() +\n  labs(x = \"p\", title = \"Graph of the Three Posteriors\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n## Posterior Means & 90% Credible Intervals for P:\n\n-   Now that we have found our posterior distributions and graphed them, we can also compare their posterior means and credible intervals.\n\n#### Non informative Posterior with Beta (alpha = 57, beta = 29)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_informative_post_mean <- 57/(57 + 29)\nnon_informative_post_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6627907\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.05, 57, 29)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5772453\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95, 57, 29)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7440061\n```\n\n\n:::\n:::\n\n\n\n\n-   We found the non informative posterior mean to be 0.663.We found the 90% credible interval to be (0.5772453, 0.7440061 ) According to our model, there is a 90% probability that the proportion of points that Nadal wins on his own serve against his primary rival, Novak Djokovic, at the French Open is between 0.5772453 and 0.7440061.\n\n#### Informative Posterior 1 with Beta (alpha = 101.6483, beta = 50.82415)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninformative_post_1_mean <- 101.6483/(101.6483 + 50.82415)\ninformative_post_1_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6666667\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.05, 101.6483, 50.82415)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.602825\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95, 101.6483, 50.82415)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7280142\n```\n\n\n:::\n:::\n\n\n\n\n-   We found the informative posterior #1 (based on clay-court match the two played in the previous year) mean for to be 0.666667. We found the 90% credible interval to be (0.602825, 0.7280142 ) According to our model, there is a 90% probability that the proportion of points that Nadal wins on his own serve against his primary rival, Novak Djokovic, at the French Open is between 0.602825 and 0.7280142.\n\n#### Informative Posterior 1 with Beta (alpha = 307.7405, beta = 111.9135)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninformative_post_2_mean <- 307.7405/(307.7405 + 111.9135)\ninformative_post_2_mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7333196\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.05, 307.7405, 111.9135)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6972262\n```\n\n\n:::\n\n```{.r .cell-code}\nqbeta(0.95, 307.7405, 111.9135)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7681472\n```\n\n\n:::\n:::\n\n\n\n\n-   We found the informative posterior #2 (based on a sports announcers claim) mean for to be 0.7333196. We found the 90% credible interval to be (0.6972262, 0.7681472 ) According to our model, there is a 90% probability that the proportion of points that Nadal wins on his own serve against his primary rival, Novak Djokovic, at the French Open is between 0.6972262 and 0.7681472.\n\n## Comparing the 3 Posteriors:\n\n-   Before comparing the 3 posteriors to each other, we should compare each posterior to the prior. For our non informative posterior, we see a big change from the prior since our prior was very week. Any chunk of data added to a non informative prior will almost completely control the shape of the posterior distribution. For our first informative posterior (based on clay-court match the two played in the previous year). we see the mean does not change (since the data we collected from 2020 had the same probability as our prior data), however, the variance does decrease since we have increased both alpha and beta. For our second informative posterior (based on sports announcers claim), we see very little change in the mean of the probability, The reason for the slight change was our prior already had a very large alpha and beta. This means any new posterior we want to make will have a very slight effect on the prior.\n\n-   Now that we compared each posterior to their own priors, we will prepare the posteriors to the others. First, we noticed that our non informative posterior and 1st informative posterior shared the same exact posterior mean. The only difference between the two is their 90% credible intervals. This is because the 1st informative posterior has a much larger alpha and beta than the non informative posterior, making its 90% credible interval smaller than the non informative posterior. We also can see that the 2nd informative posterior stayed much larger than the other two posterior which made sense to us since the 2nd posterior had a very large alpha and beta to begin with. It also has a smaller credible interval due to the large alpha and beta.\n\n-   If I had to chose which one to use, I would use the 1st informative posterior. Reason #1 would be that the mean of the posterior didn't change from the prior because our prior data matched the posterior data. The second reason is we can see from the graph the the variance of the posterior is not too large, especially compared to the non-informative prior. Finally, the 2nd posteriors mean was not very close to the data's mean which is why I would not use the 2nd posterior.\n\n-   As we briefly mentioned above, the second informative posterior had the lowest variance because it had the largest alpha and beta. The non informative posterior has the largest variance since it had to smallest alpha and beta.\n\n## Conclusion:\n\n-   To conclude, we can see that the best kind of prior and posterior to use is: A prior that does not overpower the distribution, and a posterior that has a mean that is close to the mean of our data we find. We didn't get an amazing distribution when we used a non informative prior because the data we collected completely overpowered the prior. While its posterior mean matched our 1st informative posterior, its variance was much larger since it had a much smaller alpha and beta. We didn't get amazing results with our 2nd informative prior because in order to match the targeted mean and probability, we had to use a very large alpha and beta to begin with. This means when we go to calculate a posterior, the prior will completely overpower the data, therefore not given us the best posterior. The 1st informative prior had a great informative data that, in this case, matched the data collected after the prior. This meant while the mean did not shift, the variance got even smaller which is what we like.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}